# Example values for running the toystore SUT
imageRegistry: ghcr.io/clue2-sose25
imagePullPolicy: Always
sutConfigFileName: toystore.yaml
sutConfig: |
  config:
    sut: "toystore"
    namespace: "st-cp25clue2"
    sut_git_repo: "https://github.com/clue2-sose25/sustainable_toystore"
    sut_path: "toystore"
    helm_chart_path: "toystore/toystore"
    values_yaml_name: "values.yaml"
    workload_target: "toystore-frontend"
    application_endpoint_path: "/"
    default_resource_limits:
      cpu: 1000
      memory: 1024
    wait_before_workloads: 120
    wait_after_workloads: 120

  helm_replacements:
  - value: 'tag: "latest"'
    replacement: 'tag: "__EXPERIMENT_TAG__"'

  workloads:
    - name: "shaped"
      description: "Workload with custom load shape behavior and realistic user journeys."
      timeout_duration: 4000
      workload_runtime: 3600
      workload_settings:
        LOCUST_USERS: 25
        LOCUST_SPAWN_RATE: 2
      locust_files:
        - "sut_configs/workloads/toystore/locustfile.py"
    - name: "fixed"
      description: "Fixed number of requests workload for consistent testing. Will terminate after 1000 requests or the specified duration."
      timeout_duration: 4000
      workload_runtime: 3600
      workload_settings:
        MAXIMUM_REQUESTS: 50000
      locust_files:
        - "sut_configs/workloads/toystore/fixed_requests.py"
    - name: "rampup"
      description: "Gradual ramp-up load pattern with 8 stages for scalability testing."
      timeout_duration: 4000
      workload_runtime: 3600
      workload_settings:
        STAGE_DURATION: 450
        MAX_USERS: 50
        NUM_STAGES: 8
      locust_files:
        - "sut_configs/workloads/toystore/rampup_loadshape.py"

  resource_limits: []

  variants:
    - name: "baseline"
      description: "A ToyStore application storing its data in a local SQLite DB"
      target_branch: "baseline"
      colocated_workload: true
      critical_services: ["toystore-frontend", "toystore-backend"]
      autoscaling: "cpu"
    - name: "postgres"
      description: "A ToyStore application using external Postgres DB"
      target_branch: "postgres"
      colocated_workload: true
      critical_services: ["toystore-frontend", "toystore-backend", "toystore-db"]
      autoscaling: "cpu"
clueConfig: |
  config:
    prometheus_url: "http://130.149.158.32:32426"
    docker_registry_address: ghcr.io/clue2-sose25
    local_public_ip: "registry"
    local_port: 5000
    remote_platform_arch: "linux/arm64/v8"
    local_platform_arch: "linux/arm64/v8"
    target_utilization: 70
clueDeployer:
  enabled: false
  image: clue2-deployer
  tag: latest
  serviceAccountName: st-cp25clue2-user
  service:
    port: 8000
    type: ClusterIP # Change to NodePort if needed or LoadBalancer if need to access with IP_NODE:PORT
    nodePort: 30501
  probes:
    path: /api/health
  env:
    DEPLOY_ONLY: "false"
    N_ITERATIONS: "1"
    SUT: toystore
    VARIANTS: baseline
    WORKLOADS: shaped
    SETUP_GRAFANA_DASHBOARD: "false"
    PRECONFIGURE_CLUSTER: "false"
    DEPLOY_AS_SERVICE: "true"
    ENABLE_DEBUG: "false"
    HELM_DRIVER: configmap
    GRAFANA_USERNAME: admin
    GRAFANA_PASSWORD: ""
    GRAFANA_URL: http://10.111.147.11
    GRAFANA_PORT: 80
    PROMETHEUS_URL: http://130.149.158.32:32426
  job:
    enabled: true
clueWebui:
  enabled: true
  image: clue2-webui
  tag: pr-test
  service:
    port: 80
    type: NodePort # Change to NodePort if needed or LoadBalancer if need to access with IP_NODE:PORT
    nodePort: 30501
  env:
    API_BASE_URL: http://clue-deployer:8000
    NGINX_RESOLVER: 10.96.0.10
    NGINX_RESOLVER_VALID: 10s
loadGenerator:
  jobEnabled: false
  image: clue2-loadgenerator-builder
  tag: latest
  # Set this to mount a folder path within the chart to include all locust files
  workloadDir: default_workloads_toystore
ingress:
  enabled: false
  host: clue.example.com
  tls: false
rbac:
  create: false
sutNamespace: "st-cp25clue2" # should be the same as in sutConfig
